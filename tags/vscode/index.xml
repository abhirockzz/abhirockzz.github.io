<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Abhishek Gupta – Vscode</title>
    <link>https://abhirockzz.github.io/tags/vscode/</link>
    <description>Recent content in Vscode on Abhishek Gupta</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© Abhishek Gupta, 2025</copyright>
    <lastBuildDate>Tue, 21 Sep 2021 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://abhirockzz.github.io/tags/vscode/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Enhance local development experience using the Azure Cosmos DB Linux emulator and VS Code</title>
      <link>https://abhirockzz.github.io/blog/cosmosdb-emulator-devcontainer/</link>
      <pubDate>Tue, 21 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://abhirockzz.github.io/blog/cosmosdb-emulator-devcontainer/</guid>
      <description>
        
        
        &lt;p&gt;This blog post provides a quick overview and demo of how you can use the &lt;a href=&#34;https://docs.microsoft.com/azure/cosmos-db/linux-emulator?tabs=ssl-netstd21&#34; title=&#34;https://docs.microsoft.com/en-us/azure/cosmos-db/linux-emulator?tabs=ssl-netstd21&#34;target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Azure Cosmos DB Linux Emulator on Docker&lt;/a&gt; (in preview at the time of writing) along with &lt;a href=&#34;https://code.visualstudio.com/&#34; title=&#34;https://code.visualstudio.com/&#34;target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Visual Studio Code&lt;/a&gt; in order to enhance your local development experience.&lt;/p&gt;
&lt;p&gt;Since the Azure Cosmos DB Linux Emulator is readily available as a Docker image (simply &lt;code&gt;docker pull mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator&lt;/code&gt;), it&amp;rsquo;s easy to incorporate it within your existing setup. For instance, it could be in a &lt;code&gt;docker-compose&lt;/code&gt; file as a part of a larger stack (here is an &lt;a href=&#34;https://devblogs.microsoft.com/cosmosdb/kafka-azure-cosmos-db-docker/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;example of how to use it with Apache Kafka&lt;/a&gt;). However, complementing it with the &lt;a href=&#34;https://code.visualstudio.com/docs/remote/containers&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Visual Studio Code Remote - Containers&lt;/a&gt; extension, gives you the ability to leverage a Docker container as a full-fledged development environment.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/assets/docs/remote/containers/architecture-containers.png&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://code.visualstudio.com/assets/docs/remote/containers/architecture-containers.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Say you want to build an app with &lt;a href=&#34;https://docs.microsoft.com/azure/cosmos-db/sql/sql-query-getting-started&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Azure Cosmos DB Core (SQL) API&lt;/a&gt; and the &lt;a href=&#34;https://docs.microsoft.com/azure/cosmos-db/sql/sql-api-sdk-java-v4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java SDK&lt;/a&gt;, and you have VS Code and Docker (optionally Docker Compose) available. Just create a JSON configuration file (called &lt;code&gt;devcontainer.json&lt;/code&gt;) to define your stack. You can then spin up an environment on-demand with just a few clicks - this will constitute one or more Docker containers along with the entire operating system, programming language runtime (Java in this case), toolset, etc. which you originally specified in &lt;code&gt;devcontainer.json&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Some of the obvious benefits of using the emulator include: it&amp;rsquo;s cost-effective (free!), convenient for scenarios when your app has other components (e.g. messaging systems) and great for iterative development/prototyping/demos since setting up and tearing down the environment is easy, consistent and error-free (in most cases!)  &lt;/p&gt;
&lt;h3&gt;How to use the Azure Cosmos DB Linux emulator with VS Code&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;how-to-use-the-azure-cosmos-db-linux-emulator-with-vs-code&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#how-to-use-the-azure-cosmos-db-linux-emulator-with-vs-code&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Use the instructions in this &lt;a href=&#34;https://github.com/Azure-Samples/cosmosdb-java-devcontainers-demo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub repo&lt;/a&gt; to get started quickly. It is based on the &lt;a href=&#34;https://github.com/Azure-Samples/azure-cosmos-java-sql-api-samples&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;original sample code repo for Azure Cosmos DB Java SDK for SQL API&lt;/a&gt; with &lt;a href=&#34;https://github.com/Azure-Samples/cosmosdb-java-devcontainers-demo/tree/main/.devcontainer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;added files&lt;/a&gt; to enable &amp;ldquo;Visual Studio Code Remote - Containers&amp;rdquo; experience.&lt;/p&gt;
&lt;p&gt;You can also follow along with the video that shows all of this in action:&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/sMgmE3zuHNY?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;p&gt;This example can be extended to any Java application. All you need to do is add the &lt;em&gt;.devcontainer&lt;/em&gt; folder to your current project and (maybe) tweak a few things depending on your requirement for e.g. the &lt;a href=&#34;https://github.com/Azure-Samples/cosmosdb-java-devcontainers-demo/blob/main/.devcontainer/Dockerfile#L5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java version&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What this demonstrates is just the tip of the iceberg and you could leverage it in so many interesting ways. I look forward to hearing how you use it!&lt;/p&gt;
&lt;h3&gt;More resources&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;more-resources&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#more-resources&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Find &lt;a href=&#34;https://docs.microsoft.com/azure/cosmos-db/optimize-dev-test&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;more ways to dev/test free&lt;/a&gt; with Azure Cosmos DB&lt;/li&gt;
&lt;li&gt;Download the &lt;a href=&#34;https://docs.microsoft.com/azure/cosmos-db/local-emulator?tabs=ssl-netstd21&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Azure Cosmos DB local emulator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Review &lt;a href=&#34;https://docs.microsoft.com/azure/cosmos-db/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;technical documentation&lt;/a&gt; for Azure Cosmos DB&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
